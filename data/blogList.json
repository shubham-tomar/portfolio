[
  {
    "id": "blog1",
    "title": "LZ4 compression algorithm : A Deep Dive",
    "date": "Feb 1, 2025",
    "category": "Tech",
    "summary": "Data compression has become a cornerstone of efficient storage and faster data transfers. Among the myriad of compression algorithms available, LZ4 stands out for its speed. It achieves remarkable compression and decompression speeds while maintaining reasonable compression ratios. This blog explores the inner workings of LZ4, its practical use cases, and its advantages over other algorithms.",
    "imageUrl": "https://miro.medium.com/v2/resize:fit:2000/format:webp/0*Uf6eLXiirYgrS4RE.png",
    "mediumUrl": "https://medium.com/@shubhamtomar1498/lz4-compression-algorithm-a-deep-dive-db3b91a60965",
    "markdownFile": "blog1.md"
  },
  {
    "id": "blog2",
    "title": "Scaling PostgreSQL on AWS RDS: Diagnosing and Resolving Performance Bottlenecks",
    "date": "Apr 1, 2025",
    "category": "Database",
    "summary": "In our enterprise environment, PostgreSQL hosted on AWS RDS served as the foundational datastore for analytical and reporting workloads characterised by a high frequency of both read and write operations. Initially, this architecture functioned seamlessly. However, the unanticipated onboarding new clients precipitated a marked degradation in system responsiveness. Performance regressions emerged, with transactional latency increasing, write throughput declining, and query operations becoming increasingly sluggish.",
    "imageUrl": "https://miro.medium.com/v2/resize:fit:1400/format:webp/1*As5TBUibYrPQ0aRCtIqeuA.png",
    "mediumUrl": "https://medium.com/@shubhamtomar1498/scaling-postgresql-on-aws-rds-diagnosing-and-resolving-performance-bottlenecks-through-546bd1ae306f",
    "markdownFile": "blog2.md"
  },
  {
    "id": "blog3",
    "title": "TreeLine DB: Redefining Database Performance",
    "date": "Feb 1, 2025",
    "category": "Database",
    "summary": "In the digital era, the performance of database systems is pivotal, underpinning technology-driven solutions across various industries. Traditionally, systems like RocksDB and LevelDB have relied on log-structured merge-tree (LSM) technologies, optimized for earlier storage environments where write performance was crucial. However, with the advent of Non-Volatile Memory Express (NVMe) SSDs, the storage landscape has radically transformed. NVMe SSDs drastically improve latency, throughput, and parallel I/O capabilities — key features for today’s data-intensive applications.",
    "imageUrl": "https://miro.medium.com/v2/resize:fit:1400/format:webp/0*oedZjzf5Hfz8XTjF.jpg",
    "mediumUrl": "https://medium.com/@shubhamtomar1498/treeline-db-redefining-database-performance-5056b0904bdc",
    "markdownFile": null
  },
  {
    "id": "blog4",
    "title": "Postgres to Postgres Migration: Insert Into vs PgX Copy",
    "date": "May 15, 2025",
    "category": "Database",
    "summary": "Recently, I had the task of migrating around 3TB of data from non-partitioned tables into partitioned tables in PostgreSQL. Given the substantial size, I explored efficient migration strategies, narrowing down my options to INSERT INTO (SQL statements) and PostgreSQL COPY protocol (using Go's pgx.CopyFrom). Using a jump node with database access, I developed scripts for both methods and extensively tested their performance and feasibility.",
    "imageUrl": "https://miro.medium.com/v2/resize:fit:2000/format:webp/1*-fTEmDl8HgR5HUBL0LOvdg.png",
    "mediumUrl": "https://medium.com/data-engineer-things/postgres-to-postgres-migration-insert-into-vs-pgx-copy-0b2cfadd55ba",
    "markdownFile": null
  },
  {
    "id": "blog5",
    "title": "Deploy Your Rust Application on AWS EC2 with Scaling and Automation",
    "date": "June 1, 2025",
    "category": "Tutorials",
    "summary": "Deploying a Rust application on AWS EC2 requires careful planning to ensure it scales well and is automated for ease of management. This blog provides a step-by-step guide to setting up a Rust application on AWS EC2, including configuration for horizontal scaling and automation to handle load and updates efficiently.",
    "imageUrl": "https://miro.medium.com/v2/resize:fit:1400/format:webp/0*e7K9zB0IVNWsu4ik",
    "mediumUrl": "https://medium.com/@shubhamtomar1498/deploy-your-rust-application-on-aws-ec2-with-scaling-and-automation-6427c37b6e24",
    "markdownFile": null
  }
]
